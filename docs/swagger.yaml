definitions:
  domain.Order:
    properties:
      created_at:
        type: string
      is_final:
        type: boolean
      order_id:
        type: string
      status:
        $ref: '#/definitions/domain.OrderStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.OrderEvent:
    properties:
      created_at:
        type: string
      event_id:
        type: string
      is_final:
        type: boolean
      order_id:
        type: string
      order_status:
        $ref: '#/definitions/domain.OrderStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.OrderStatus:
    enum:
    - cool_order_created
    - sbu_verification_pending
    - confirmed_by_mayor
    - chinazes
    - changed_my_mind
    - failed
    - give_my_money_back
    type: string
    x-enum-varnames:
    - CoolOrderCreated
    - SbuVerificationPending
    - ConfirmedByMayor
    - Chinazes
    - ChangedMyMind
    - Failed
    - GiveMyMoneyBack
  http.postEventRequest:
    properties:
      created_at:
        type: string
      event_id:
        type: string
      order_id:
        type: string
      order_status:
        enum:
        - cool_order_created
        - sbu_verification_pending
        - confirmed_by_mayor
        - changed_my_mind
        - failed
        - chinazes
        - give_my_money_back
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - created_at
    - event_id
    - order_id
    - order_status
    - updated_at
    - user_id
    type: object
info:
  contact: {}
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Retrieve a list of orders with optional filtering and sorting.
      parameters:
      - collectionFormat: csv
        description: List of order statuses to filter by. Required if `is_final` is
          not provided.
        in: query
        items:
          type: string
        name: status
        type: array
      - description: ID of the user to filter orders by.
        in: query
        name: user_id
        type: string
      - description: Number of orders to return. Default is 10.
        in: query
        name: limit
        type: integer
      - description: Offset for pagination. Default is 0.
        in: query
        name: offset
        type: integer
      - description: Final status of the order. Required if `status` is not provided.
        in: query
        name: is_final
        type: boolean
      - description: Field to sort by (created_at/updated_at). Default is created_at.
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc/desc). Default is desc.
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
      summary: Retrieve a list of orders
      tags:
      - orders
  /orders/{order_id}/events:
    get:
      consumes:
      - application/json
      description: Stream events for an order using Server-Side Events (SSE).
      parameters:
      - description: ID of the order
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: Stream of order events
          schema:
            $ref: '#/definitions/domain.OrderEvent'
      summary: Stream order events
      tags:
      - orders
  /webhooks/payments/orders:
    post:
      consumes:
      - application/json
      description: handle event from JustPay!
      parameters:
      - description: Event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/http.postEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OrderEvent'
      summary: handle event from JustPay!
      tags:
      - webhooks
swagger: "2.0"
